def call(Map config) {
    echo "üìä –°–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    
    def testResults = [:]
    
    try {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤
        def testResultAction = currentBuild.getAction(hudson.tasks.test.AbstractTestResultAction.class)
        
        if (testResultAction != null) {
            testResults = [
                totalTests: testResultAction.totalCount,
                failedTests: testResultAction.failCount,
                skippedTests: testResultAction.skipCount,
                passedTests: testResultAction.totalCount - testResultAction.failCount - testResultAction.skipCount,
                testDuration: testResultAction.totalCount > 0 ? 
                    String.format("%.2f", testResultAction.getTotalDuration() / 1000) + "s" : "0s"
            ]
        } else {
            testResults = [
                totalTests: 0,
                failedTests: 0,
                skippedTests: 0,
                passedTests: 0,
                testDuration: "0s"
            ]
        }
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        writeJSON file: "${env.ARTIFACTS_PATH}/test-summary.json", json: [
            project: config.projectName,
            projectType: config.projectType,
            branch: config.branch,
            buildNumber: env.BUILD_NUMBER,
            buildUser: config.buildUser,
            timestamp: new Date().format("yyyy-MM-dd HH:mm:ss"),
            results: testResults,
            buildStatus: currentBuild.currentResult ?: 'SUCCESS'
        ]
        
        // –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
        archiveArtifacts artifacts: "${env.ARTIFACTS_PATH}/**/*", allowEmptyArchive: true
        
        echo "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–±—Ä–∞–Ω—ã: –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${testResults.totalTests}, –ü—Ä–æ—à–ª–æ: ${testResults.passedTests}, –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${testResults.failedTests}"
        
    } catch (Exception e) {
        echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${e.getMessage()}"
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    }
}